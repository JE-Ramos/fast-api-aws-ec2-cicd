name: PR Review Checks

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

concurrency:
  group: pr-checks-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  static-analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies and static analysis tools
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Code formatting check with Black
      run: black --check app/
    
    - name: Import sorting check with isort
      run: isort --check-only app/
    
    - name: Linting with flake8
      run: flake8 app/
    
    - name: Type checking with mypy
      run: mypy app/ --ignore-missing-imports
    
    - name: Security audit with bandit
      run: bandit -r app/ -f json -o bandit-report.json && cat bandit-report.json
      continue-on-error: true
    
    - name: Dependency vulnerability check with safety
      run: safety check --json --output safety-report.json && cat safety-report.json
      continue-on-error: true
    
    - name: Upload analysis artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: static-analysis-report
        path: |
          bandit-report.json
          safety-report.json

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run unit tests in parallel
      run: |
        pytest tests/ -m "unit or not integration" \
          --cov=app \
          --cov-branch \
          --cov-report=term-missing:skip-covered \
          --cov-report=xml:unit-coverage.xml \
          --junitxml=unit-results.xml \
          -n auto
    
    - name: Upload unit test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results
        path: |
          unit-coverage.xml
          unit-results.xml

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run integration tests
      run: |
        pytest tests/ -m "integration" \
          --cov=app \
          --cov-branch \
          --cov-report=term-missing:skip-covered \
          --cov-report=xml:integration-coverage.xml \
          --junitxml=integration-results.xml
    
    - name: Upload integration test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integration-test-results
        path: |
          integration-coverage.xml
          integration-results.xml

  build-validation:
    name: Build Validation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Validate app structure and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt
    
    - name: Validate FastAPI app can start
      run: |
        cd app
        timeout 30 uvicorn main:app --host 0.0.0.0 --port 8000 &
        sleep 10
        curl -f http://localhost:8000/health || exit 1
        pkill -f uvicorn
    
    - name: Validate CDK synthesis
      run: |
        cd infra
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        npm install -g aws-cdk
        export REPOSITORY_URL=${{ github.server_url }}/${{ github.repository }}.git
        cdk synth FastAPIEC2Stack-Staging
        cdk synth FastAPIEC2Stack-Production

  pr-summary:
    name: PR Review Summary
    runs-on: ubuntu-latest
    needs: [static-analysis, unit-tests, integration-tests, build-validation]
    if: always()
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Generate PR summary comment
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // Check job statuses
          const jobs = {
            'Static Analysis': '${{ needs.static-analysis.result }}',
            'Unit Tests': '${{ needs.unit-tests.result }}',
            'Integration Tests': '${{ needs.integration-tests.result }}',
            'Build Validation': '${{ needs.build-validation.result }}'
          };
          
          let summary = '## üîç PR Review Summary\n\n';
          summary += '| Check | Status |\n';
          summary += '|-------|--------|\n';
          
          for (const [job, status] of Object.entries(jobs)) {
            const emoji = status === 'success' ? '‚úÖ' : status === 'failure' ? '‚ùå' : '‚è∏Ô∏è';
            summary += `| ${job} | ${emoji} ${status} |\n`;
          }
          
          const allPassed = Object.values(jobs).every(status => status === 'success');
          
          if (allPassed) {
            summary += '\n‚úÖ **All checks passed! This PR is ready for review.**';
          } else {
            summary += '\n‚ùå **Some checks failed. Please fix the issues before merging.**';
          }
          
          // Add comment to PR
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          });